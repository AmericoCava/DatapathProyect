
x-common:
  &common
  image: apache/airflow:2.3.0
  user: "${AIRFLOW_UID}:0"
  env_file: 
    - ./mysql/variables.env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - /var/run/docker.sock:/var/run/docker.sock

x-depends-on:
  &depends-on
  depends_on:
    postgres:
      condition: service_healthy
    airflow-init:
      condition: service_completed_successfully


services:
 # pythonapp:
  #  build: ./python/
   # command: sh -c "sleep 10s ; python3 ./hello_world.py"
    #depends_on:
     # - mysql
      #- jupyter

  postgres:
    image: postgres:13
    container_name: postgres
    ports:
      - "5434:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    env_file:
      - ./mysql/variables.env

  scheduler:
    <<: *common
    <<: *depends-on
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "8793:8793"

  webserver:
    <<: *common
    <<: *depends-on
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version


  mysql:
    build: ./mysql/
    restart: always
    environment:
      #- MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=datapath4
    ports:
      - '3310:3306'
    volumes: 
      - ./mysqldata:/mysql/data
    env_file: 
      - ./mysql/variables.env

  jupyter:
    build: ./python
    restart: always
    ports:
      - "8200:8888"
    entrypoint:
      jupyter lab --ip='0.0.0.0' --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    volumes: 
      - ./python:/user/app

  mongo:
      build: ./mongo/
      restart: always
      #hostname: hostmongo
      #environment:
      #  MONGO_INITDB_ROOT_USERNAME: 'mongo'
      #  MONGO_INITDB_ROOT_PASSWORD: 'root'
      env_file: 
        - ./mysql/variables.env
      volumes: 
        - ./mongodata:/data/db
      ports:
        - "27017:27017"

volumes:
  mysqldata:
  mongodata:
